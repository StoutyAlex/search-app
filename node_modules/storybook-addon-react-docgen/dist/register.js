"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PropsTable = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _addons = _interopRequireDefault(require("@storybook/addons"));

var _coreEvents = require("@storybook/core-events");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var PropsTable =
/*#__PURE__*/
function (_React$Component) {
  _inherits(PropsTable, _React$Component);

  function PropsTable() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, PropsTable);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PropsTable)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_this), "state", {
      text: ''
    });

    _defineProperty(_assertThisInitialized(_this), "onAddPropsTable", function (text) {
      _this.setState({
        text: text
      });
    });

    return _this;
  }

  _createClass(PropsTable, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this$props = this.props,
          channel = _this$props.channel,
          api = _this$props.api; // Listen to the PropsTable and render it.

      channel.on('storybook/PropsTable/add_PropsTable', this.onAddPropsTable); // Clear the current PropsTable on every story change.

      api.on(_coreEvents.STORY_CHANGED, this.onAddPropsTable);
    } // This is some cleanup tasks when the PropsTable panel is unmounting.

  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this$props2 = this.props,
          channel = _this$props2.channel,
          api = _this$props2.api;
      api.off(_coreEvents.STORY_CHANGED, this.onAddPropsTable);
      this.unmounted = true;
      channel.removeListener('storybook/PropsTable/add_PropsTable', this.onAddPropsTable);
    }
  }, {
    key: "render",
    value: function render() {
      var active = this.props.active;
      var text = this.state.text;
      return active ? _react["default"].createElement("div", {
        // eslint-disable-next-line react/no-danger
        dangerouslySetInnerHTML: {
          __html: text
        },
        style: {
          padding: 10,
          boxSizing: 'border-box',
          width: '100%'
        },
        className: "addon-PropsTable-container"
      }) : null;
    }
  }]);

  return PropsTable;
}(_react["default"].Component);

exports.PropsTable = PropsTable;

_defineProperty(PropsTable, "propTypes", {
  // eslint-disable-next-line react/boolean-prop-naming
  active: _propTypes["default"].bool.isRequired,
  channel: _propTypes["default"].shape({
    on: _propTypes["default"].func,
    emit: _propTypes["default"].func,
    removeListener: _propTypes["default"].func
  }).isRequired,
  api: _propTypes["default"].shape({
    on: _propTypes["default"].func,
    off: _propTypes["default"].func,
    getQueryParam: _propTypes["default"].func,
    setQueryParams: _propTypes["default"].func
  }).isRequired
});

_addons["default"].register('storybook/props', function (api) {
  var channel = _addons["default"].getChannel();

  _addons["default"].addPanel('storybook/props/panel', {
    title: 'Props',
    // eslint-disable-next-line react/prop-types
    render: function render(_ref) {
      var active = _ref.active;
      return _react["default"].createElement(PropsTable, {
        key: "storybook-addon-react-docgen",
        channel: channel,
        api: api,
        active: active
      });
    }
  });
});