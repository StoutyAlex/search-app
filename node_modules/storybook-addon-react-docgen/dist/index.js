"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Story", {
  enumerable: true,
  get: function get() {
    return _Story["default"];
  }
});
exports.withPropsTable = void 0;

var _react = _interopRequireDefault(require("react"));

var _server = _interopRequireDefault(require("react-dom/server"));

var _nestedObjectAssign = _interopRequireDefault(require("nested-object-assign"));

var _addons = _interopRequireWildcard(require("@storybook/addons"));

var _Story = _interopRequireWildcard(require("./Components/Story"));

var _PropTable = _interopRequireDefault(require("./Components/PropTable"));

var _makeTableComponent = _interopRequireDefault(require("./Components/makeTableComponent"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var defaultOptions = {
  propTables: [],
  TableComponent: _PropTable["default"],
  maxPropsIntoLine: 3,
  maxPropObjectKeys: 3,
  maxPropArrayLength: 3,
  maxPropStringLength: 50
};

function addPropsTable(storyFn, context, infoOptions) {
  var options = _objectSpread({}, defaultOptions, {}, infoOptions); // Props.propTables can only be either an array of components or null
  // propTables option is allowed to be set to 'false' (a boolean)
  // if the option is false, replace it with null to avoid react warnings


  if (!options.propTables) {
    options.propTables = null;
  }

  return {
    info: options.text,
    context: context,
    components: (0, _Story.getProps)(options.propTables, options.propTablesExclude, storyFn),
    styles: typeof options.styles === 'function' ? options.styles : function (s) {
      return (0, _nestedObjectAssign["default"])({}, s, options.styles);
    },
    propTables: options.propTables,
    propTablesExclude: options.propTablesExclude,
    PropTable: (0, _makeTableComponent["default"])(options.TableComponent),
    maxPropObjectKeys: options.maxPropObjectKeys,
    maxPropArrayLength: options.maxPropArrayLength,
    maxPropsIntoLine: options.maxPropsIntoLine,
    maxPropStringLength: options.maxPropStringLength,
    excludedPropTypes: options.excludedPropTypes
  };
}

var withPropsTable = (0, _addons.makeDecorator)({
  name: 'withPropsTable',
  parameterName: 'props',
  allowDeprecatedUsage: true,
  wrapper: function wrapper(getStory, context, _ref) {
    var options = _ref.options,
        parameters = _ref.parameters;

    var channel = _addons["default"].getChannel();

    var storyOptions = parameters || options;
    var propsTableOptions = typeof storyOptions === 'string' ? {
      text: storyOptions
    } : storyOptions;
    var mergedOptions = typeof propsTableOptions === 'string' ? propsTableOptions : _objectSpread({}, options, {}, propsTableOptions);
    var content = getStory(context);
    var res = addPropsTable(content, context, mergedOptions);
    channel.emit('storybook/PropsTable/add_PropsTable', _server["default"].renderToString(_react["default"].createElement(_Story["default"], res, content)));
    return content;
  }
});
exports.withPropsTable = withPropsTable;